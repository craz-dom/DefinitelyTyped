declare module cc {
    export class Class {
        id: number;
        implement(prop:Object): void;
    }
    
    /**
     * Common getter setter configuration function
     * @function
     * @param {Object}   proto      A class prototype or an object to config<br/>
     * @param {String}   prop       Property name
     * @param {function} getter     Getter function for the property
     * @param {function} setter     Setter function for the property
     * @param {String}   getterName Name of getter function for the property
     * @param {String}   setterName Name of setter function for the property
     */
    export function defineGetterSetter(proto: Object, prop: string, getter: () => any, setter: (value: any) => void, getterName: string, setterName: string): void;

    /**
     * Create a new object and copy all properties in an exist object to the new object
     * @function
     * @param {object|Array} obj The source object
     * @return {Array|object} The created object
     */
    export function clone(obj: Object): Object;
    export function clone(obj: Array<any>): Array<any>;

    export function inject(srcPrototype: Object, destPrototype:Object);
}